/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {Signer, utils, Contract, ContractFactory, Overrides} from "ethers";
import type {Provider, TransactionRequest} from "@ethersproject/providers";
import type {PromiseOrValue} from "../../../common";
import type {
  MockLiquidityBootstrappingPoolStorageLib,
  MockLiquidityBootstrappingPoolStorageLibInterface,
} from "../../../contracts/test/MockLiquidityBootstrappingPoolStorageLib";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolState",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "totalTokens",
        type: "uint256",
      },
    ],
    name: "getGradualWeightUpdateParams",
    outputs: [
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "startWeights",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "endWeights",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolState",
        type: "bytes32",
      },
    ],
    name: "getRecoveryMode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolState",
        type: "bytes32",
      },
    ],
    name: "getSwapEnabled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolState",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "newStartWeights",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "newEndWeights",
        type: "uint256[]",
      },
    ],
    name: "setNormalizedWeights",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolState",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "setRecoveryMode",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolState",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "swapEnabled",
        type: "bool",
      },
    ],
    name: "setSwapEnabled",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610890806100206000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063dea4136d11610050578063dea4136d146100d6578063e7492811146100f6578063f4d5b1061461010957610072565b80631864b7c9146100775780631f03881e146100a3578063b2f19ad5146100c3575b600080fd5b61008a61008536600461073c565b61011c565b60405161009a949392919061081e565b60405180910390f35b6100b66100b13660046106f1565b61013c565b60405161009a919061080a565b6100b66100d13660046106f1565b61014d565b6100e96100e4366004610709565b610158565b60405161009a9190610815565b6100e961010436600461075d565b61016b565b6100e9610117366004610709565b610184565b60008060608061012c8686610190565b9299919850965090945092505050565b6000610147826102b7565b92915050565b6000610147826102c4565b600061016483836102d0565b9392505050565b600061017a86868686866102dd565b9695505050505050565b6000610164838361037b565b6000806060806101a38660046020610389565b93506101b28660246020610389565b92508467ffffffffffffffff811180156101cb57600080fd5b506040519080825280602002602001820160405280156101f5578160200160208202803683370190505b5091508467ffffffffffffffff8111801561020f57600080fd5b50604051908082528060200260200182016040528015610239578160200160208202803683370190505b50905060005b858110156102ad57610262601f61025c8960448584020183610389565b906103b6565b83828151811061026e57fe5b602090810291909101015261028e601061025c8960c08584020183610389565b82828151811061029a57fe5b602090810291909101015260010161023f565b5092959194509250565b60006101478260016103cb565b600061014782826103cb565b60006101648383836103d2565b60006102fc84602460206102f48a8a6004846103e1565b9291906103e1565b955060005b835181101561037057610366610334601085848151811061031e57fe5b602002602001015161042290919063ffffffff16565b8551601084810260c001916102f49061035690601f908b908990811061031e57fe5b8c90601f888102604401906103e1565b9650600101610301565b509495945050505050565b6000610164838360016103d2565b6001901b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0191901c1690565b60006101648383670de0b6b3a7640000610437565b1c60011690565b6001811b1992909216911b1790565b60006103ee8484846104a5565b506001901b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01811b1992909216911b1790565b60006101648383670de0b6b3a76400006104f0565b60006104556002841015801561044e575060ff8411155b6064610554565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6001841b01610489818611156064610554565b61049c6104968685610566565b8261058a565b95945050505050565b6104b461010083106064610554565b6104dc6001821015801561044e57506104d260ff84610100036105aa565b8211156064610554565b6104eb83821c156101b4610554565b505050565b600061050d6002841015801561044e575060ff8411156064610554565b61051b828511156064610554565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6001841b0161049c61054e8683610566565b8461058a565b8161056257610562816105b6565b5050565b600082820261016484158061058357508385838161058057fe5b04145b6003610554565b60006105998215156004610554565b8183816105a257fe5b049392505050565b80820390821102900390565b6105e0817f42414c00000000000000000000000000000000000000000000000000000000006105e3565b50565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b600082601f83011261066e578081fd5b813567ffffffffffffffff80821115610685578283fd5b6020808302604051828282010181811085821117156106a2578687fd5b6040528481529450818501925085820181870183018810156106c357600080fd5b600091505b848210156106e65780358452928201926001919091019082016106c8565b505050505092915050565b600060208284031215610702578081fd5b5035919050565b6000806040838503121561071b578081fd5b8235915060208301358015158114610731578182fd5b809150509250929050565b6000806040838503121561074e578182fd5b50508035926020909101359150565b600080600080600060a08688031215610774578081fd5b853594506020860135935060408601359250606086013567ffffffffffffffff808211156107a0578283fd5b6107ac89838a0161065e565b935060808801359150808211156107c1578283fd5b506107ce8882890161065e565b9150509295509295909350565b6000815180845260208085019450808401835b83811015610370578151875295820195908201906001016107ee565b901515815260200190565b90815260200190565b60008582528460208301526080604083015261083d60808301856107db565b828103606084015261084f81856107db565b97965050505050505056fea26469706673582212208c8f94ca185fdbd394095cbb5720fbc1aece39bdf6a3ff05a957ad779142117c64736f6c63430007010033";

type MockLiquidityBootstrappingPoolStorageLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockLiquidityBootstrappingPoolStorageLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockLiquidityBootstrappingPoolStorageLib__factory extends ContractFactory {
  constructor(
    ...args: MockLiquidityBootstrappingPoolStorageLibConstructorParams
  ) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): Promise<MockLiquidityBootstrappingPoolStorageLib> {
    return super.deploy(
      overrides || {}
    ) as Promise<MockLiquidityBootstrappingPoolStorageLib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockLiquidityBootstrappingPoolStorageLib {
    return super.attach(address) as MockLiquidityBootstrappingPoolStorageLib;
  }
  override connect(
    signer: Signer
  ): MockLiquidityBootstrappingPoolStorageLib__factory {
    return super.connect(
      signer
    ) as MockLiquidityBootstrappingPoolStorageLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockLiquidityBootstrappingPoolStorageLibInterface {
    return new utils.Interface(
      _abi
    ) as MockLiquidityBootstrappingPoolStorageLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockLiquidityBootstrappingPoolStorageLib {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockLiquidityBootstrappingPoolStorageLib;
  }
}
