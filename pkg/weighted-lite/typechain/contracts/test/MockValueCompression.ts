/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type {FunctionFragment, Result} from "@ethersproject/abi";
import type {Listener, Provider} from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "../../common";

export interface MockValueCompressionInterface extends utils.Interface {
  functions: {
    "compress(uint256,uint256)": FunctionFragment;
    "decompress(uint256,uint256)": FunctionFragment;
    "fullCompress(uint256,uint256,uint256)": FunctionFragment;
    "fullDecompress(uint256,uint256,uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "compress"
      | "compress(uint256,uint256)"
      | "decompress"
      | "decompress(uint256,uint256)"
      | "fullCompress"
      | "fullCompress(uint256,uint256,uint256)"
      | "fullDecompress"
      | "fullDecompress(uint256,uint256,uint256)"
  ): FunctionFragment;

  encodeFunctionData(
    functionFragment: "compress",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "compress(uint256,uint256)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "decompress",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "decompress(uint256,uint256)",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<BigNumberish>]
  ): string;
  encodeFunctionData(
    functionFragment: "fullCompress",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "fullCompress(uint256,uint256,uint256)",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "fullDecompress",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "fullDecompress(uint256,uint256,uint256)",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;

  decodeFunctionResult(functionFragment: "compress", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "compress(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "decompress", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "decompress(uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "fullCompress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "fullCompress(uint256,uint256,uint256)",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "fullDecompress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "fullDecompress(uint256,uint256,uint256)",
    data: BytesLike
  ): Result;

  events: {};
}

export interface MockValueCompression extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: MockValueCompressionInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    compress(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "compress(uint256,uint256)"(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    decompress(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "decompress(uint256,uint256)"(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    fullCompress(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      maxUncompressedValue: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "fullCompress(uint256,uint256,uint256)"(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      maxUncompressedValue: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    fullDecompress(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      maxUncompressedValue: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "fullDecompress(uint256,uint256,uint256)"(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      maxUncompressedValue: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;
  };

  compress(
    value: PromiseOrValue<BigNumberish>,
    bitLength: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "compress(uint256,uint256)"(
    value: PromiseOrValue<BigNumberish>,
    bitLength: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  decompress(
    value: PromiseOrValue<BigNumberish>,
    bitLength: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "decompress(uint256,uint256)"(
    value: PromiseOrValue<BigNumberish>,
    bitLength: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  fullCompress(
    value: PromiseOrValue<BigNumberish>,
    bitLength: PromiseOrValue<BigNumberish>,
    maxUncompressedValue: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "fullCompress(uint256,uint256,uint256)"(
    value: PromiseOrValue<BigNumberish>,
    bitLength: PromiseOrValue<BigNumberish>,
    maxUncompressedValue: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  fullDecompress(
    value: PromiseOrValue<BigNumberish>,
    bitLength: PromiseOrValue<BigNumberish>,
    maxUncompressedValue: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "fullDecompress(uint256,uint256,uint256)"(
    value: PromiseOrValue<BigNumberish>,
    bitLength: PromiseOrValue<BigNumberish>,
    maxUncompressedValue: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  callStatic: {
    compress(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "compress(uint256,uint256)"(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    decompress(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "decompress(uint256,uint256)"(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    fullCompress(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      maxUncompressedValue: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "fullCompress(uint256,uint256,uint256)"(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      maxUncompressedValue: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    fullDecompress(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      maxUncompressedValue: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "fullDecompress(uint256,uint256,uint256)"(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      maxUncompressedValue: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    compress(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "compress(uint256,uint256)"(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    decompress(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "decompress(uint256,uint256)"(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    fullCompress(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      maxUncompressedValue: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "fullCompress(uint256,uint256,uint256)"(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      maxUncompressedValue: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    fullDecompress(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      maxUncompressedValue: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "fullDecompress(uint256,uint256,uint256)"(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      maxUncompressedValue: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    compress(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "compress(uint256,uint256)"(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    decompress(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "decompress(uint256,uint256)"(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    fullCompress(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      maxUncompressedValue: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "fullCompress(uint256,uint256,uint256)"(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      maxUncompressedValue: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    fullDecompress(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      maxUncompressedValue: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "fullDecompress(uint256,uint256,uint256)"(
      value: PromiseOrValue<BigNumberish>,
      bitLength: PromiseOrValue<BigNumberish>,
      maxUncompressedValue: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
