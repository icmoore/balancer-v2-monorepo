/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {Contract, Signer, utils} from "ethers";
import type {Provider} from "@ethersproject/providers";
import type {
  IRecoveryMode,
  IRecoveryModeInterface,
} from "../../../../../@balancer-labs/v2-interfaces/contracts/pool-utils/IRecoveryMode";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "RecoveryModeStateChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "disableRecoveryMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "enableRecoveryMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "inRecoveryMode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IRecoveryMode__factory {
  static readonly abi = _abi;
  static createInterface(): IRecoveryModeInterface {
    return new utils.Interface(_abi) as IRecoveryModeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IRecoveryMode {
    return new Contract(address, _abi, signerOrProvider) as IRecoveryMode;
  }
}
