/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {Signer, utils, Contract, ContractFactory, Overrides} from "ethers";
import type {Provider, TransactionRequest} from "@ethersproject/providers";
import type {PromiseOrValue} from "../../common";
import type {
  ExternalWeightedMath,
  ExternalWeightedMathInterface,
} from "../../contracts/ExternalWeightedMath";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "bptAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalBPT",
        type: "uint256",
      },
    ],
    name: "calcAllTokensInGivenExactBptOut",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "normalizedWeight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bptTotalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "calcBptInGivenExactTokenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "normalizedWeights",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "bptTotalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "calcBptInGivenExactTokensOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "normalizedWeight",
        type: "uint256",
      },
    ],
    name: "calcBptOutAddToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "normalizedWeight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bptTotalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "calcBptOutGivenExactTokenIn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "normalizedWeights",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "bptTotalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "calcBptOutGivenExactTokensIn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balanceIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "weightIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "weightOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    name: "calcInGivenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balanceIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "weightIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "balanceOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "weightOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "calcOutGivenIn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "normalizedWeight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bptAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bptTotalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "calcTokenInGivenExactBptOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "normalizedWeight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bptAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bptTotalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "calcTokenOutGivenExactBptIn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "bptAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalBPT",
        type: "uint256",
      },
    ],
    name: "calcTokensOutGivenExactBptIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "normalizedWeights",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    name: "calculateInvariant",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "normalizedWeights",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "scalingFactors",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "exitBPTInForExactTokensOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "normalizedWeights",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "exitExactBPTInForTokenOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "exitExactBPTInForTokensOut",
    outputs: [
      {
        internalType: "uint256",
        name: "bptAmountIn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "joinAllTokensInForExactBPTOut",
    outputs: [
      {
        internalType: "uint256",
        name: "bptAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "normalizedWeights",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "scalingFactors",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "joinExactTokensInForBPTOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "normalizedWeights",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "joinTokenInForExactBPTOut",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061314c806100206000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063588e1b44116100b2578063afc4d0db11610081578063d590510011610066578063d590510014611272578063ef2aca76146112a7578063f442dbc4146112dc57610136565b8063afc4d0db1461108d578063b540624d146110c257610136565b8063588e1b4414610c895780637351a78614610e395780637f1ae8a914610f3157806390043a5814610f6657610136565b8063120c0c63116101095780632ac71a3e116100ee5780632ac71a3e1461086e5780633d0b05e914610aac5780634c888cbb14610c6657610136565b8063120c0c63146104fe5780631b2db0ea1461073c57610136565b806303a5b64b1461013b578063098e0189146102c85780630c78bb4e146104825780630ccd8941146104c9575b600080fd5b61026d6004803603606081101561015157600080fd5b81019060208101813564010000000081111561016c57600080fd5b82018360208201111561017e57600080fd5b803590602001918460208302840111640100000000831117156101a057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929584359590949093506040810192506020013590506401000000008111156101f857600080fd5b82018360208201111561020a57600080fd5b8035906020019184600183028401116401000000008311171561022c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611384945050505050565b6040518083815260200180602001828103825283818151815260200191508051906020019060200280838360005b838110156102b357818101518382015260200161029b565b50505050905001935050505060405180910390f35b61026d600480360360a08110156102de57600080fd5b8101906020810181356401000000008111156102f957600080fd5b82018360208201111561030b57600080fd5b8035906020019184602083028401116401000000008311171561032d57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561037d57600080fd5b82018360208201111561038f57600080fd5b803590602001918460208302840111640100000000831117156103b157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929584359560208601359591945092506060810191506040013564010000000081111561040d57600080fd5b82018360208201111561041f57600080fd5b8035906020019184600183028401116401000000008311171561044157600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061139f945050505050565b6104b7600480360360a081101561049857600080fd5b50803590602081013590604081013590606081013590608001356113be565b60408051918252519081900360200190f35b6104b7600480360360a08110156104df57600080fd5b50803590602081013590604081013590606081013590608001356113d9565b61026d600480360360c081101561051457600080fd5b81019060208101813564010000000081111561052f57600080fd5b82018360208201111561054157600080fd5b8035906020019184602083028401116401000000008311171561056357600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092959493602081019350359150506401000000008111156105b357600080fd5b8201836020820111156105c557600080fd5b803590602001918460208302840111640100000000831117156105e757600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561063757600080fd5b82018360208201111561064957600080fd5b8035906020019184602083028401116401000000008311171561066b57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092958435956020860135959194509250606081019150604001356401000000008111156106c757600080fd5b8201836020820111156106d957600080fd5b803590602001918460018302840111640100000000831117156106fb57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506113e8945050505050565b61026d6004803603606081101561075257600080fd5b81019060208101813564010000000081111561076d57600080fd5b82018360208201111561077f57600080fd5b803590602001918460208302840111640100000000831117156107a157600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929584359590949093506040810192506020013590506401000000008111156107f957600080fd5b82018360208201111561080b57600080fd5b8035906020019184600183028401116401000000008311171561082d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611409945050505050565b61026d600480360360c081101561088457600080fd5b81019060208101813564010000000081111561089f57600080fd5b8201836020820111156108b157600080fd5b803590602001918460208302840111640100000000831117156108d357600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561092357600080fd5b82018360208201111561093557600080fd5b8035906020019184602083028401116401000000008311171561095757600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092959493602081019350359150506401000000008111156109a757600080fd5b8201836020820111156109b957600080fd5b803590602001918460208302840111640100000000831117156109db57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295843595602086013595919450925060608101915060400135640100000000811115610a3757600080fd5b820183602082011115610a4957600080fd5b80359060200191846001830284011164010000000083111715610a6b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611418945050505050565b61026d600480360360a0811015610ac257600080fd5b810190602081018135640100000000811115610add57600080fd5b820183602082011115610aef57600080fd5b80359060200191846020830284011164010000000083111715610b1157600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050640100000000811115610b6157600080fd5b820183602082011115610b7357600080fd5b80359060200191846020830284011164010000000083111715610b9557600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295843595602086013595919450925060608101915060400135640100000000811115610bf157600080fd5b820183602082011115610c0357600080fd5b80359060200191846001830284011164010000000083111715610c2557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061142a945050505050565b6104b760048036036040811015610c7c57600080fd5b508035906020013561143b565b6104b7600480360360a0811015610c9f57600080fd5b810190602081018135640100000000811115610cba57600080fd5b820183602082011115610ccc57600080fd5b80359060200191846020830284011164010000000083111715610cee57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050640100000000811115610d3e57600080fd5b820183602082011115610d5057600080fd5b80359060200191846020830284011164010000000083111715610d7257600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050640100000000811115610dc257600080fd5b820183602082011115610dd457600080fd5b80359060200191846020830284011164010000000083111715610df657600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295505082359350505060200135611450565b610ee160048036036060811015610e4f57600080fd5b810190602081018135640100000000811115610e6a57600080fd5b820183602082011115610e7c57600080fd5b80359060200191846020830284011164010000000083111715610e9e57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020013561145f565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610f1d578181015183820152602001610f05565b505050509050019250505060405180910390f35b6104b7600480360360a0811015610f4757600080fd5b5080359060208101359060408101359060608101359060800135611474565b6104b760048036036040811015610f7c57600080fd5b810190602081018135640100000000811115610f9757600080fd5b820183602082011115610fa957600080fd5b80359060200191846020830284011164010000000083111715610fcb57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561101b57600080fd5b82018360208201111561102d57600080fd5b8035906020019184602083028401116401000000008311171561104f57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611483945050505050565b6104b7600480360360a08110156110a357600080fd5b508035906020810135906040810135906060810135906080013561148f565b6104b7600480360360a08110156110d857600080fd5b8101906020810181356401000000008111156110f357600080fd5b82018360208201111561110557600080fd5b8035906020019184602083028401116401000000008311171561112757600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929594936020810193503591505064010000000081111561117757600080fd5b82018360208201111561118957600080fd5b803590602001918460208302840111640100000000831117156111ab57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092959493602081019350359150506401000000008111156111fb57600080fd5b82018360208201111561120d57600080fd5b8035906020019184602083028401116401000000008311171561122f57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550508235935050506020013561149e565b6104b7600480360360a081101561128857600080fd5b50803590602081013590604081013590606081013590608001356114ad565b6104b7600480360360a08110156112bd57600080fd5b50803590602081013590604081013590606081013590608001356114bc565b610ee1600480360360608110156112f257600080fd5b81019060208101813564010000000081111561130d57600080fd5b82018360208201111561131f57600080fd5b8035906020019184602083028401116401000000008311171561134157600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955050823593505050602001356114cb565b600060606113938585856114d8565b91509150935093915050565b600060606113b087878787876114fc565b915091509550959350505050565b60006113cd86868686866115c5565b90505b95945050505050565b60006113cd8686868686611640565b600060606113fa8888888888886116fd565b91509150965096945050505050565b60006060611393858585611756565b600060606113fa888888888888611770565b600060606113b087878787876117b9565b60006114478383611810565b90505b92915050565b60006113cd8686868686611855565b606061146c848385611993565b949350505050565b60006113cd8686868686611a2c565b60006114478383611ac2565b60006113cd8686868686611b34565b60006113cd8686868686611c71565b60006113cd8686868686611d86565b60006113cd8686868686611dfc565b606061146c848385611ed8565b600060606114e583611f68565b91506114f2858584611993565b9050935093915050565b6000606060008061150c85611f8a565b9150915061151e895182106064611fb8565b60006115538a838151811061152f57fe5b60200260200101518a848151811061154357fe5b6020026020010151858b8b611a2c565b905060608a5167ffffffffffffffff8111801561156f57600080fd5b50604051908082528060200260200182016040528015611599578160200160208202803683370190505b509050818184815181106115a957fe5b6020908102919091010152929a92995091975050505050505050565b60006115e76115dc87670429d069189e0000611fca565b831115610130611fb8565b60006115f38784612002565b905060006116018883612014565b9050600061160f888761206b565b9050600061161d83836120ab565b905061163261162b82612150565b8990611fca565b9a9950505050505050505050565b600080611657846116518188612162565b90612014565b90506116706709b6e64a8ec60000821015610132611fb8565b600061168e611687670de0b6b3a76400008961206b565b83906120ab565b905060006116a561169e83612150565b8a90611fca565b905060006116bc6116b58a612150565b8390612178565b905060006116ca8383612162565b905060006116e16116da89612150565b8490612178565b90506116ed8282612002565b9c9b505050505050505050505050565b6000606080600061170d856121b0565b9150915061171d8a51835161226d565b611727828961227a565b60006117368b8b858b8b611c71565b90506117468282101560d0611fb8565b9a91995090975050505050505050565b6000606061176383611f68565b91506114f2858584611ed8565b60006060806000611780856121b0565b9150915061179082518b5161226d565b61179a828961227a565b60006117a98b8b858b8b611855565b90506117468282111560cf611fb8565b600060606000806117c985611f8a565b915091506117db895182106064611fb8565b60006115538a83815181106117ec57fe5b60200260200101518a848151811061180057fe5b6020026020010151858b8b611640565b600080611837611828670de0b6b3a764000085612162565b670de0b6b3a76400009061206b565b905061146c61184e82670de0b6b3a7640000612162565b8590611fca565b60006060845167ffffffffffffffff8111801561187157600080fd5b5060405190808252806020026020018201604052801561189b578160200160208202803683370190505b5090506000805b8851811015611960576118fb8982815181106118ba57fe5b60200260200101516116518984815181106118d157fe5b60200260200101518c85815181106118e557fe5b602002602001015161216290919063ffffffff16565b83828151811061190757fe5b60200260200101818152505061195661194f89838151811061192557fe5b602002602001015185848151811061193957fe5b602002602001015161217890919063ffffffff16565b8390612002565b91506001016118a2565b50600061197189898986868a6122e9565b905061198661197f82612150565b8790612178565b9998505050505050505050565b606060006119a18385612014565b9050845167ffffffffffffffff811180156119bb57600080fd5b506040519080825280602002602001820160405280156119e5578160200160208202803683370190505b50915060005b8551811015611a2357611a048287838151811061193957fe5b838281518110611a1057fe5b60209081029190910101526001016119eb565b50509392505050565b600080611a3d846116518188612002565b9050611a566729a2241af62c0000821115610133611fb8565b6000611a6d611687670de0b6b3a764000089612014565b90506000611a8d611a8683670de0b6b3a7640000612162565b8a90612178565b90506000611a9d6116b58a612150565b90506000611aab8383612162565b905060006116e1611abb89612150565b8490612014565b670de0b6b3a764000060005b8351811015611b2457611b1a611b13858381518110611ae957fe5b6020026020010151858481518110611afd57fe5b602002602001015161240090919063ffffffff16565b8390611fca565b9150600101611ace565b5061144a60008211610137611fb8565b60008080611b4c88611b468189612002565b9061206b565b90506000611b6c611b5c89612150565b611b66848b611fca565b90612002565b905080821115611bf6576000670de0b6b3a76400008211611b8e576000611bba565b611bba8a7ffffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c00008401611fca565b90506000611bc88983612162565b90506000611bd68289612178565b9050611bec611be58383612162565b8490612002565b9550505050611c0a565b86925082611c0a57600093505050506113d0565b5060009050611c1d88611b468185612002565b90506000611c2b8289612400565b90506000670de0b6b3a76400008211611c45576000611632565b611632877ffffffffffffffffffffffffffffffffffffffffffffffffff21f494c589c00008401611fca565b60006060845167ffffffffffffffff81118015611c8d57600080fd5b50604051908082528060200260200182016040528015611cb7578160200160208202803683370190505b5090506000805b8851811015611d7557611d17898281518110611cd657fe5b6020026020010151611b46898481518110611ced57fe5b60200260200101518c8581518110611d0157fe5b602002602001015161200290919063ffffffff16565b838281518110611d2357fe5b602002602001018181525050611d6b61194f898381518110611d4157fe5b6020026020010151858481518110611d5557fe5b6020026020010151611fca90919063ffffffff16565b9150600101611cbe565b506000611c2b89898986868a612499565b6000611da8611d9d85670429d069189e0000611fca565b831115610131611fb8565b6000611dbe611db78685612162565b8690612014565b90506000611dcc8588612014565b90506000611dda83836120ab565b90506000611df082670de0b6b3a7640000612162565b90506116328a82612178565b600080611e0d876116518188612162565b90506000611e27611e1d88612150565b611b66848a612178565b9050600082821115611e83576000611e48611e4184612150565b8b90611fca565b90506000611e568983612162565b90506000611e6d611e6689612150565b8390612014565b9050611e798382612002565b9350505050611e96565b508580611e9657600093505050506113d0565b6000611ea68a611b468185612162565b90506000611eb4828b612400565b9050611ec9611ec282612150565b8990612178565b9b9a5050505050505050505050565b60606000611ee6838561206b565b9050845167ffffffffffffffff81118015611f0057600080fd5b50604051908082528060200260200182016040528015611f2a578160200160208202803683370190505b50915060005b8551811015611a2357611f4982878381518110611d5557fe5b838281518110611f5557fe5b6020908102919091010152600101611f30565b6000818060200190516040811015611f7f57600080fd5b506020015192915050565b600080828060200190516060811015611fa257600080fd5b5060208101516040909101519094909350915050565b81611fc657611fc6816125a5565b5050565b6000828202611fee841580611fe7575083858381611fe457fe5b04145b6003611fb8565b670de0b6b3a7640000815b04949350505050565b60008282016114478482101583611fb8565b60006120238215156004611fb8565b670de0b6b3a7640000830261205584158061204e5750670de0b6b3a764000085838161204b57fe5b04145b6005611fb8565b6001836001830304018115150291505092915050565b600061207a8215156004611fb8565b670de0b6b3a764000083026120a284158061204e5750670de0b6b3a764000085838161204b57fe5b828181611ff957fe5b6000670de0b6b3a76400008214156120c457508161144a565b671bc16d674ec800008214156120e5576120de8384612178565b905061144a565b673782dace9d9000008214156121155760006121018485612178565b905061210d8182612178565b91505061144a565b600061212184846125d2565b9050600061213b61213483612710612178565b6001612002565b90506121478282612002565b9250505061144a565b670de0b6b3a764000081810391100290565b6000612172838311156001611fb8565b50900390565b6000828202612192841580611fe7575083858381611fe457fe5b6001670de0b6b3a76400006001830304018115150291505092915050565b606060008280602001905160608110156121c957600080fd5b8151602083018051604051929492938301929190846401000000008211156121f057600080fd5b90830190602082018581111561220557600080fd5b825186602082028301116401000000008211171561222257600080fd5b82525081516020918201928201910280838360005b8381101561224f578181015183820152602001612237565b50505050919091016040525060200151929792965091945050505050565b611fc68183146067611fb8565b8151815161228990829061226d565b60005b818110156122e3576122c48482815181106122a357fe5b60200260200101518483815181106122b757fe5b6020026020010151611fca565b8482815181106122d057fe5b602090810291909101015260010161228c565b50505050565b670de0b6b3a764000060005b87518110156123f557600085828151811061230c57fe5b602002602001015185111561236f57600061233561232987612150565b8b8581518110611d5557fe5b90506000612349828a86815181106118e557fe5b90506000612359611e6688612150565b90506123658382612002565b9350505050612394565b86828151811061237b57fe5b60200260200101519050806000141561239457506123ed565b60006123bd8a84815181106123a557fe5b6020026020010151611b46848d87815181106118e557fe5b90506123e861184e8a85815181106123d157fe5b60200260200101518361240090919063ffffffff16565b935050505b6001016122f5565b509695505050505050565b6000670de0b6b3a764000082141561241957508161144a565b671bc16d674ec80000821415612433576120de8384611fca565b673782dace9d90000082141561245b57600061244f8485611fca565b905061210d8182611fca565b600061246784846125d2565b9050600061247a61213483612710612178565b90508082101561248f5760009250505061144a565b6121478282612162565b670de0b6b3a764000060005b87518110156123f5576000848683815181106124bd57fe5b60200260200101511115612536576000670de0b6b3a764000086116124e35760006124fd565b6124fd670de0b6b3a764000087038b8581518110611d5557fe5b9050600061251b86612515848c88815181106118e557fe5b90612178565b905061252d818a86815181106118e557fe5b9250505061255b565b86828151811061254257fe5b60200260200101519050806000141561255b575061259d565b60006125848a848151811061256c57fe5b6020026020010151611b46848d8781518110611d0157fe5b905061259861184e8a85815181106123d157fe5b935050505b6001016124a5565b6125cf817f42414c00000000000000000000000000000000000000000000000000000000006126f2565b50565b6000816125e85750670de0b6b3a764000061144a565b826125f55750600061144a565b61260560ff84901c156006611fb8565b8261262b770bce5086492111aea88f4bb1ca6bcf584181ea8059f7653284106007611fb8565b826000670c7d713b49da00008313801561264c5750670f43fc2c04ee000083125b1561268357600061265c8461276d565b9050670de0b6b3a764000080820784020583670de0b6b3a764000083050201915050612691565b8161268d846128a6565b0290505b670de0b6b3a764000090056126df7ffffffffffffffffffffffffffffffffffffffffffffffffdc702bd3a30fc000082128015906126d8575068070c1cc73b00c800008213155b6008611fb8565b6126e881612c46565b9695505050505050565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b670de0b6b3a7640000026000806ec097ce7bc90715b34b9f1000000000808401907fffffffffffffffffffffffffffffffffff3f68318436f8ea4cb460f000000000850102816127b957fe5b05905060006ec097ce7bc90715b34b9f100000000082800205905081806ec097ce7bc90715b34b9f100000000081840205915060038205016ec097ce7bc90715b34b9f100000000082840205915060058205016ec097ce7bc90715b34b9f100000000082840205915060078205016ec097ce7bc90715b34b9f100000000082840205915060098205016ec097ce7bc90715b34b9f1000000000828402059150600b8205016ec097ce7bc90715b34b9f1000000000828402059150600d8205016ec097ce7bc90715b34b9f1000000000828402059150600f820581019050806002029450505050505b919050565b6000670de0b6b3a76400008212156128e3576128d9826ec097ce7bc90715b34b9f1000000000816128d357fe5b056128a6565b60000390506128a1565b60007e1600ef3172e58d2e933ec884fde10064c63b5372d805e203c0000000000000831261293457770195e54c5dd42177f53a27172fa9ec630262827000000000830592506806f05b59d3b2000000015b73011798004d755d3c8bc8e03204cf44619e000000831261296c576b1425982cf597cd205cef7380830592506803782dace9d9000000015b606492830292026e01855144814a7ff805980ff008400083126129b4576e01855144814a7ff805980ff008400068056bc75e2d63100000840205925068ad78ebc5ac62000000015b6b02df0ab5a80a22c61ab5a70083126129ef576b02df0ab5a80a22c61ab5a70068056bc75e2d6310000084020592506856bc75e2d631000000015b693f1fce3da636ea5cf8508312612a2657693f1fce3da636ea5cf85068056bc75e2d631000008402059250682b5e3af16b18800000015b690127fa27722cc06cc5e28312612a5d57690127fa27722cc06cc5e268056bc75e2d6310000084020592506815af1d78b58c400000015b68280e60114edb805d038312612a925768280e60114edb805d0368056bc75e2d631000008402059250680ad78ebc5ac6200000015b680ebc5fb417461211108312612abd57680ebc5fb4174612111068056bc75e2d631000009384020592015b6808f00f760a4b2db55d8312612af2576808f00f760a4b2db55d68056bc75e2d6310000084020592506802b5e3af16b1880000015b6806f5f17757889379378312612b27576806f5f177578893793768056bc75e2d63100000840205925068015af1d78b58c40000015b6806248f33704b2866038312612b5b576806248f33704b28660368056bc75e2d63100000840205925067ad78ebc5ac620000015b6805c548670b9510e7ac8312612b8f576805c548670b9510e7ac68056bc75e2d6310000084020592506756bc75e2d6310000015b600068056bc75e2d63100000840168056bc75e2d631000008086030281612bb257fe5b059050600068056bc75e2d63100000828002059050818068056bc75e2d63100000818402059150600382050168056bc75e2d63100000828402059150600582050168056bc75e2d63100000828402059150600782050168056bc75e2d63100000828402059150600982050168056bc75e2d63100000828402059150600b820501600202606485820105979650505050505050565b6000612c8b7ffffffffffffffffffffffffffffffffffffffffffffffffdc702bd3a30fc00008312158015612c84575068070c1cc73b00c800008313155b6009611fb8565b6000821215612cbf57612ca082600003612c46565b6ec097ce7bc90715b34b9f100000000081612cb757fe5b0590506128a1565b60006806f05b59d3b20000008312612d1557507ffffffffffffffffffffffffffffffffffffffffffffffff90fa4a62c4e00000090910190770195e54c5dd42177f53a27172fa9ec630262827000000000612d61565b6803782dace9d90000008312612d5d57507ffffffffffffffffffffffffffffffffffffffffffffffffc87d2531627000000909101906b1425982cf597cd205cef7380612d61565b5060015b6064929092029168056bc75e2d6310000068ad78ebc5ac620000008412612dc7577fffffffffffffffffffffffffffffffffffffffffffffff5287143a539e0000009093019268056bc75e2d631000006e01855144814a7ff805980ff008400082020590505b6856bc75e2d6310000008412612e19577fffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf0000009093019268056bc75e2d631000006b02df0ab5a80a22c61ab5a70082020590505b682b5e3af16b188000008412612e69577fffffffffffffffffffffffffffffffffffffffffffffffd4a1c50e94e78000009093019268056bc75e2d63100000693f1fce3da636ea5cf85082020590505b6815af1d78b58c4000008412612eb9577fffffffffffffffffffffffffffffffffffffffffffffffea50e2874a73c000009093019268056bc75e2d63100000690127fa27722cc06cc5e282020590505b680ad78ebc5ac62000008412612f08577ffffffffffffffffffffffffffffffffffffffffffffffff5287143a539e000009093019268056bc75e2d6310000068280e60114edb805d0382020590505b68056bc75e2d631000008412612f57577ffffffffffffffffffffffffffffffffffffffffffffffffa9438a1d29cf000009093019268056bc75e2d63100000680ebc5fb4174612111082020590505b6802b5e3af16b18800008412612fa6577ffffffffffffffffffffffffffffffffffffffffffffffffd4a1c50e94e7800009093019268056bc75e2d631000006808f00f760a4b2db55d82020590505b68015af1d78b58c400008412612ff5577ffffffffffffffffffffffffffffffffffffffffffffffffea50e2874a73c00009093019268056bc75e2d631000006806f5f177578893793782020590505b68056bc75e2d631000008481019085906002908280020505918201919050600368056bc75e2d631000008783020505918201919050600468056bc75e2d631000008783020505918201919050600568056bc75e2d631000008783020505918201919050600668056bc75e2d631000008783020505918201919050600768056bc75e2d631000008783020505918201919050600868056bc75e2d631000008783020505918201919050600968056bc75e2d631000008783020505918201919050600a68056bc75e2d631000008783020505918201919050600b68056bc75e2d631000008783020505918201919050600c68056bc75e2d631000008783020505918201919050606468056bc75e2d6310000084840205850205969550505050505056fea26469706673582212206741ba6009df73c4b292d252b052c65b7be62290a48b68d279717e68c4e48cc164736f6c63430007010033";

type ExternalWeightedMathConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExternalWeightedMathConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExternalWeightedMath__factory extends ContractFactory {
  constructor(...args: ExternalWeightedMathConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): Promise<ExternalWeightedMath> {
    return super.deploy(overrides || {}) as Promise<ExternalWeightedMath>;
  }
  override getDeployTransaction(
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ExternalWeightedMath {
    return super.attach(address) as ExternalWeightedMath;
  }
  override connect(signer: Signer): ExternalWeightedMath__factory {
    return super.connect(signer) as ExternalWeightedMath__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExternalWeightedMathInterface {
    return new utils.Interface(_abi) as ExternalWeightedMathInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExternalWeightedMath {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ExternalWeightedMath;
  }
}
