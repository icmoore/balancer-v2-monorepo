/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {Contract, Signer, utils} from "ethers";
import type {Provider} from "@ethersproject/providers";
import type {
  IComposableStablePoolRates,
  IComposableStablePoolRatesInterface,
} from "../../../../../@balancer-labs/v2-interfaces/contracts/pool-stable/IComposableStablePoolRates";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "setTokenRateCacheDuration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "updateTokenRateCache",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IComposableStablePoolRates__factory {
  static readonly abi = _abi;
  static createInterface(): IComposableStablePoolRatesInterface {
    return new utils.Interface(_abi) as IComposableStablePoolRatesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IComposableStablePoolRates {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IComposableStablePoolRates;
  }
}
