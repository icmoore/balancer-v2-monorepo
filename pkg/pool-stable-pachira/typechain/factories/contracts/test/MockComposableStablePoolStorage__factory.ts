/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {Signer, utils, Contract, ContractFactory, Overrides} from "ethers";
import type {Provider, TransactionRequest} from "@ethersproject/providers";
import type {PromiseOrValue} from "../../../common";
import type {
  MockComposableStablePoolStorage,
  MockComposableStablePoolStorageInterface,
} from "../../../contracts/test/MockComposableStablePoolStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IVault",
        name: "vault",
        type: "address",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "contract IRateProvider[]",
        name: "tokenRateProviders",
        type: "address[]",
      },
      {
        internalType: "bool[]",
        name: "exemptFromYieldProtocolFeeFlags",
        type: "bool[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
    ],
    name: "PausedStateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "enabled",
        type: "bool",
      },
    ],
    name: "RecoveryModeStateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "SwapFeePercentageChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "addBptIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "bptAmount",
        type: "uint256",
      },
    ],
    name: "addBptItem",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amountsWithBpt",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "areAllTokensExempt",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "areNoTokensExempt",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disableRecoveryMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "dropBptItem",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "enableRecoveryMode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "selector",
        type: "bytes4",
      },
    ],
    name: "getActionId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAuthorizer",
    outputs: [
      {
        internalType: "contract IAuthorizer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBptIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDomainSeparator",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getNextNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPausedState",
    outputs: [
      {
        internalType: "bool",
        name: "paused",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "pauseWindowEndTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "bufferPeriodEndTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPoolId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProtocolFeesCollector",
    outputs: [
      {
        internalType: "contract IProtocolFeesCollector",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getRateProvider",
    outputs: [
      {
        internalType: "contract IRateProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRateProvider0",
    outputs: [
      {
        internalType: "contract IRateProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRateProvider1",
    outputs: [
      {
        internalType: "contract IRateProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRateProvider2",
    outputs: [
      {
        internalType: "contract IRateProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRateProvider3",
    outputs: [
      {
        internalType: "contract IRateProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRateProvider4",
    outputs: [
      {
        internalType: "contract IRateProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRateProvider5",
    outputs: [
      {
        internalType: "contract IRateProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRateProviders",
    outputs: [
      {
        internalType: "contract IRateProvider[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getScalingFactor0",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getScalingFactor1",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getScalingFactor2",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getScalingFactor3",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getScalingFactor4",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getScalingFactor5",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getScalingFactors",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSwapFeePercentage",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVault",
    outputs: [
      {
        internalType: "contract IVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "inRecoveryMode",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "isTokenExemptFromYieldProtocolFee",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenIndex",
        type: "uint256",
      },
    ],
    name: "isTokenExemptFromYieldProtocolFeeByIndex",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onExitPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "onJoinPool",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "queryExit",
    outputs: [
      {
        internalType: "uint256",
        name: "bptIn",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsOut",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "lastChangeBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolSwapFeePercentage",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "userData",
        type: "bytes",
      },
    ],
    name: "queryJoin",
    outputs: [
      {
        internalType: "uint256",
        name: "bptOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "swapFeePercentage",
        type: "uint256",
      },
    ],
    name: "setSwapFeePercentage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "skipBptIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6104c06040523480156200001257600080fd5b50604051620045a2380380620045a28339810160408190526200003591620011d3565b6040518060600160405280620000528530620009c160201b60201c565b8152602001838152602001828152508460006040518060400160405280601f81526020017f4d6f636b436f6d706f7361626c65537461626c65506f6f6c53746f7261676500815250604051806040016040528060088152602001671353d0d2d7d0941560c21b815250620000cd8830620009c160201b60201c565b88516001016001600160401b0381118015620000e857600080fd5b5060405190808252806020026020018201604052801562000113578160200160208202803683370190505b5064e8d4a5100060008060008983838a8a8e86336001600160a01b031660001b8480604051806040016040528060018152602001603160f81b815250878781600390805190602001906200016992919062000ff7565b5080516200017f90600490602084019062000ff7565b50506005805460ff19166012179055508151602092830120608052805191012060a052507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60c05260e0526001600160601b0319606091821b81166101005291901b166101205250620001fe9050630163f50083111561019462000b5b565b620002126276a70082111561019562000b5b565b4291909101610140819052016101605260601b6001600160601b03191661018052855162000246906002111560c862000b5b565b620002606200025462000b70565b8751111560c962000b5b565b6200026b8462000b75565b6000620002868b8b898962000c0960201b620011dd1760201c565b9050806101a081815250508a6001600160a01b031663d2946c2b6040518163ffffffff1660e01b815260040160206040518083038186803b158015620002cb57600080fd5b505afa158015620002e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003069190620011ad565b60601b6001600160601b0319166101c052505089515198506200033a97505060028811955060c8945062000b5b9350505050565b6200035f6001820383602001515184604001515162000c3860201b620011fd1760201c565b6101e0819052815180516000906200037357fe5b60200260200101516001600160a01b0316610220816001600160a01b031660601b815250508160000151600181518110620003aa57fe5b60200260200101516001600160a01b0316610240816001600160a01b031660601b815250508160000151600281518110620003e157fe5b60200260200101516001600160a01b0316610260816001600160a01b031660601b81525050600381116200041757600062000430565b8151805160039081106200042757fe5b60200260200101515b60601b6001600160601b0319166102805260048111620004525760006200046b565b8151805160049081106200046257fe5b60200260200101515b60601b6001600160601b0319166102a052600581116200048d576000620004a6565b8151805160059081106200049d57fe5b60200260200101515b60601b6001600160601b0319166102c05281518051620004df9190600090620004cb57fe5b602002602001015162000c5860201b60201c565b6102e05281518051620004f991906001908110620004cb57fe5b61030052815180516200051391906002908110620004cb57fe5b6103205260038111620005285760006200053e565b6200053e8260000151600381518110620004cb57fe5b61034052600481116200055357600062000569565b620005698260000151600481518110620004cb57fe5b61036052600581116200057e57600062000594565b620005948260000151600581518110620004cb57fe5b61038052815151600019015b600081118015620005d157508251805130919083908110620005be57fe5b60200260200101516001600160a01b0316115b15620005e15760001901620005a0565b6102008190528251516060906001600160401b03811180156200060357600080fd5b506040519080825280602002602001820160405280156200062e578160200160208202803683370190505b50905060008080805b8751518110156200085157858110156200076d57876020015181815181106200065c57fe5b60200260200101518582815181106200067157fe5b60200260200101906001600160a01b031690816001600160a01b031681525050620006da60006001600160a01b0316868381518110620006ad57fe5b60200260200101516001600160a01b03161415826006018662000d2c60201b6200121a179092919060201c565b935087604001518181518110620006ed57fe5b60200260200101511562000762576200073960006001600160a01b03168683815181106200071757fe5b60200260200101516001600160a01b0316141561015562000b5b60201b60201c565b620007566001828662000d2c60201b6200121a179092919060201c565b93506001925062000767565b600191505b62000848565b8581146200084857876020015160018203815181106200078957fe5b60200260200101518582815181106200079e57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050620007da60006001600160a01b0316868381518110620006ad57fe5b935087604001516001820381518110620007f057fe5b60200260200101511562000843576200081a60006001600160a01b03168683815181106200071757fe5b620008376001828662000d2c60201b6200121a179092919060201c565b93506001925062000848565b600191505b60010162000637565b50811560f890811b610480528115901b6104a052835184906000906200087357fe5b60200260200101516001600160a01b03166103a0816001600160a01b031660601b8152505083600181518110620008a657fe5b60200260200101516001600160a01b03166103c0816001600160a01b031660601b8152505083600281518110620008d957fe5b60200260200101516001600160a01b03166103e0816001600160a01b031660601b8152505060038451116200091057600062000927565b836003815181106200091e57fe5b60200260200101515b60601b6001600160601b0319166104005283516004106200094a57600062000961565b836004815181106200095857fe5b60200260200101515b60601b6001600160601b031916610420528351600510620009845760006200099b565b836005815181106200099257fe5b60200260200101515b60601b6001600160601b0319166104405250506104605250620014189650505050505050565b606082516001016001600160401b0381118015620009de57600080fd5b5060405190808252806020026020018201604052801562000a09578160200160208202803683370190505b50905082516000141562000a4c57818160008151811062000a2657fe5b60200260200101906001600160a01b031690816001600160a01b03168152505062000b55565b82515b60008111801562000a885750826001600160a01b031684600183038151811062000a7557fe5b60200260200101516001600160a01b0316115b1562000ad55783600182038151811062000a9e57fe5b602002602001015182828151811062000ab357fe5b6001600160a01b03909216602092830291909101909101526000190162000a4f565b60005b8181101562000b245784818151811062000aee57fe5b602002602001015183828151811062000b0357fe5b6001600160a01b039092166020928302919091019091015260010162000ad8565b508282828151811062000b3357fe5b60200260200101906001600160a01b031690816001600160a01b031681525050505b92915050565b8162000b6c5762000b6c8162000d3b565b5050565b600690565b62000b8e62000b8362000d50565b82101560cb62000b5b565b62000ba762000b9c62000d59565b82111560ca62000b5b565b62000bc98160c0603f60085462000d6560201b6200122917909392919060201c565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc9062000bfe908390620013a6565b60405180910390a150565b600062000c218362000d8a60201b6200124c1760201c565b62000c2f8585858562000d96565b95945050505050565b62000c53828414801562000c4b57508183145b606762000b5b565b505050565b60006001600160a01b03821630141562000c7c5750670de0b6b3a764000062000d27565b6000826001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801562000cb857600080fd5b505afa15801562000ccd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000cf39190620012e0565b60ff169050600062000d1260128362000e9060201b6200125a1760201c565b905080600a0a670de0b6b3a764000002925050505b919050565b6001811b1992909216911b1790565b62000d4d816210905360ea1b62000ea8565b50565b64e8d4a5100090565b67016345785d8a000090565b600062000d7484848462000f09565b506001901b60001901811b1992909216911b1790565b8062000b6c8162000f64565b600080856001600160a01b03166309b2760f866040518263ffffffff1660e01b815260040162000dc7919062001391565b602060405180830381600087803b15801562000de257600080fd5b505af115801562000df7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000e1d919062001194565b604051633354e3e960e11b81529091506001600160a01b038716906366a9c7d29062000e529084908890889060040162001303565b600060405180830381600087803b15801562000e6d57600080fd5b505af115801562000e82573d6000803e3d6000fd5b509298975050505050505050565b600062000ea283831115600162000b5b565b50900390565b62461bcd60e51b600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b62000f1a6101008310606462000b5b565b62000f536001821015801562000f4b575062000f4760ff846101000362000feb60201b620012701760201c565b8211155b606462000b5b565b62000c5383821c156101b462000b5b565b60028151101562000f755762000d4d565b60008160008151811062000f8557fe5b602002602001015190506000600190505b825181101562000c5357600083828151811062000faf57fe5b6020026020010151905062000fe0816001600160a01b0316846001600160a01b031610606562000b5b60201b60201c565b915060010162000f96565b80820390821102900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200103a57805160ff19168380011785556200106a565b828001600101855582156200106a579182015b828111156200106a5782518255916020019190600101906200104d565b50620010789291506200107c565b5090565b5b808211156200107857600081556001016200107d565b600082601f830112620010a4578081fd5b8151620010bb620010b582620013d6565b620013af565b818152915060208083019084810181840286018201871015620010dd57600080fd5b6000805b858110156200110d5782518015158114620010fa578283fd5b85529383019391830191600101620010e1565b50505050505092915050565b600082601f8301126200112a578081fd5b81516200113b620010b582620013d6565b8181529150602080830190848101818402860182018710156200115d57600080fd5b60005b8481101562001189578151620011768162001402565b8452928201929082019060010162001160565b505050505092915050565b600060208284031215620011a6578081fd5b5051919050565b600060208284031215620011bf578081fd5b8151620011cc8162001402565b9392505050565b60008060008060808587031215620011e9578283fd5b8451620011f68162001402565b602086810151919550906001600160401b038082111562001215578586fd5b818801915088601f83011262001229578586fd5b81516200123a620010b582620013d6565b81815284810190848601868402860187018d10156200125757898afd5b8995505b8386101562001286578051620012718162001402565b8352600195909501949186019186016200125b565b5060408b01519098509450505080831115620012a0578485fd5b620012ae89848a0162001119565b94506060880151925080831115620012c4578384fd5b5050620012d48782880162001093565b91505092959194509250565b600060208284031215620012f2578081fd5b815160ff81168114620011cc578182fd5b60006060820185835260206060818501528186518084526080860191508288019350845b818110156200134f576200133c8551620013f6565b8352938301939183019160010162001327565b505084810360408601528551808252908201925081860190845b8181101562000e82576200137e8351620013f6565b8552938301939183019160010162001369565b6020810160038310620013a057fe5b91905290565b90815260200190565b6040518181016001600160401b0381118282101715620013ce57600080fd5b604052919050565b60006001600160401b03821115620013ec578081fd5b5060209081020190565b6001600160a01b031690565b6001600160a01b038116811462000d4d57600080fd5b60805160a05160c05160e0516101005160601c6101205160601c61014051610160516101805160601c6101a0516101c05160601c6101e051610200516102205160601c6102405160601c6102605160601c6102805160601c6102a05160601c6102c05160601c6102e05161030051610320516103405161036051610380516103a05160601c6103c05160601c6103e05160601c6104005160601c6104205160601c6104405160601c610460516104805160f81c6104a05160f81c612fd4620015ce60003980611ec2525080611c8f5250806112eb525080610f3a5280611555525080610a31528061152552508061083d52806114f5525080610ddd52806114c5525080610e495280611495525080610f1652806114655250806108705250806111a6525080610e975250806106f35250806107f0525080611182525080611e79525080611e37525080611df5525080611db3525080611d71525080611d2f525080610c6b52508061143952806120ce525080610f685250806109d2525050806114105250806113ec525080610d3d525080610d19525080610ca352508061200c52508061204e52508061202d5250612fd46000f3fe608060405234801561001057600080fd5b506004361061038e5760003560e01c80638456cb59116101de578063b24694461161010f578063d505accf116100ad578063e3c6137d1161007c578063e3c6137d146106c6578063eaecb2b8146106ce578063ed24911d146106d6578063f4e81884146106de5761038e565b8063d505accf1461067a578063d5c096c41461068d578063dd62ed3e146106a0578063dd93a2c9146106b35761038e565b8063bb2478d4116100e9578063bb2478d41461065a578063c9e51c9014610662578063d25fc61a1461066a578063d2946c2b146106725761038e565b8063b246944614610642578063b35056b81461064a578063b7b814fc146106525761038e565b8063984114901161017c578063a8e59c7c11610156578063a8e59c7c1461060c578063a9059cbb14610614578063aaabadc514610627578063ab7759f11461062f5761038e565b806398411490146105e95780639a3b9cce146105f1578063a457c2d7146105f95761038e565b8063893d20e8116101b8578063893d20e8146105be5780638d928af8146105c657806390193b7c146105ce57806395d89b41146105e15761038e565b80638456cb5914610590578063851c1bb31461059857806387ec6817146105ab5761038e565b80633644e515116102c357806348ade7b01161026157806370a082311161023057806370a082311461054157806374f3b009146105545780637ecebe001461057557806382687a56146105885761038e565b806348ade7b0146104fd57806354a844ba1461051057806355c67628146105185780636028bfd4146105205761038e565b8063395093511161029d57806339509351146104c75780633eb3ed29146104da5780633f4ba83a146104e257806342e68aad146104ea5761038e565b80633644e515146104a257806338e9922e146104aa57806338fff2d0146104bf5761038e565b80631c0de0511161033057806321e631461161030a57806321e631461461045d578063238a2d591461046557806323b872dd1461047a578063313ce5671461048d5761038e565b80631c0de051146104295780631d936c67146104405780631dd746ea146104555761038e565b80630a3f0f601161036c5780630a3f0f60146103e657806314841db4146103f957806318160ddd146104195780631a16a923146104215761038e565b8063064ca1b81461039357806306fdde03146103b1578063095ea7b3146103c6575b600080fd5b61039b6106f1565b6040516103a89190612d6f565b60405180910390f35b6103b9610715565b6040516103a89190612eaf565b6103d96103d4366004612982565b6107ab565b6040516103a89190612d4c565b6103d96103f4366004612bcf565b6107c2565b61040c6104073660046129e8565b6107d5565b6040516103a89190612d14565b61039b6107e8565b61039b6107ee565b610431610812565b6040516103a893929190612d57565b61044861083b565b6040516103a89190612cb3565b61040c61085f565b61039b61086e565b61046d610892565b6040516103a89190612cc7565b6103d96104883660046128d2565b61092d565b6104956109a1565b6040516103a89190612f39565b61039b6109aa565b6104bd6104b8366004612bcf565b6109b4565b005b61039b6109d0565b6103d96104d5366004612982565b6109f4565b610448610a2f565b6104bd610a53565b61040c6104f83660046129ad565b610a67565b61044861050b366004612bcf565b610a72565b6104bd610a7d565b61039b610ad1565b61053361052e366004612a63565b610ae4565b6040516103a8929190612f20565b61039b61054f36600461287e565b610b1b565b610567610562366004612a63565b610b36565b6040516103a8929190612d27565b61039b61058336600461287e565b610c5e565b61039b610c69565b6104bd610c8d565b61039b6105a6366004612b73565b610c9f565b6105336105b9366004612a63565b610cf1565b610448610d17565b610448610d3b565b61039b6105dc36600461287e565b610d5f565b6103b9610d7a565b610448610ddb565b6103d9610dff565b6103d9610607366004612982565b610e09565b610448610e47565b6103d9610622366004612982565b610e6b565b610448610e78565b6103d961063d36600461287e565b610e82565b61039b610e95565b6103d9610eb9565b6104bd610eca565b610448610f14565b610448610f38565b6103d9610f5c565b610448610f66565b6104bd610688366004612912565b610f8a565b61056761069b366004612a63565b611015565b61039b6106ae36600461289a565b611138565b61039b6106c1366004612bcf565b611175565b61039b611180565b61039b6111a4565b61039b6111c8565b61039b6106ec366004612bcf565b6111d2565b7f000000000000000000000000000000000000000000000000000000000000000090565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107a15780601f10610776576101008083540402835291602001916107a1565b820191906000526020600020905b81548152906001019060200180831161078457829003601f168201915b5050505050905090565b60006107b833848461127c565b5060015b92915050565b60006107cd826112e4565b90505b919050565b60606107e18383611310565b9392505050565b60025490565b7f000000000000000000000000000000000000000000000000000000000000000090565b600080600061081f6113cd565b15925061082a6113ea565b915061083461140e565b9050909192565b7f000000000000000000000000000000000000000000000000000000000000000090565b6060610869611432565b905090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6060600061089e611437565b905060608167ffffffffffffffff811180156108b957600080fd5b506040519080825280602002602001820160405280156108e3578160200160208202803683370190505b50905060005b82811015610926576108fa8161145b565b82828151811061090657fe5b6001600160a01b03909216602092830291909101909101526001016108e9565b5091505090565b60008061093a8533611138565b905061095e336001600160a01b03871614806109565750838210155b61019e611584565b610969858585611592565b336001600160a01b0386161480159061098457506000198114155b1561099657610996853385840361127c565b506001949350505050565b60055460ff1690565b60006108696111c8565b6109bc611672565b6109c46116b8565b6109cd816116cb565b50565b7f000000000000000000000000000000000000000000000000000000000000000090565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916107b8918590610a2a9086611744565b61127c565b7f000000000000000000000000000000000000000000000000000000000000000090565b610a5b611672565b610a656000611756565b565b60606107cd826117e7565b60006107cd8261145b565b610a85611672565b610a8d611889565b610a97600161189d565b7feff3d4d215b42bf0960be9c6d5e05c22cba4df6627a3a523e2acee733b5854c86001604051610ac79190612d4c565b60405180910390a1565b6008546000906108699060c0603f6118f4565b60006060610afa8651610af5611437565b611903565b610b0f8989898989898961191061192c61199b565b97509795505050505050565b6001600160a01b031660009081526020819052604090205490565b60608088610b60610b45610d3b565b6001600160a01b0316336001600160a01b03161460cd611584565b610b75610b6b6109d0565b82146101f4611584565b60606000610b8286611b50565b15610baa57610b8f611b7f565b610ba189610b9b6107e8565b88611b92565b92509050610bfc565b610bb2611ba9565b6060610bbc611432565b9050610bc88a82611bb1565b610bec8d8d8d8d8d610bd8610eb9565b610be2578d610be5565b60005b878e611910565b93509150610bfa838261192c565b505b610c068b82611c1a565b81895167ffffffffffffffff81118015610c1f57600080fd5b50604051908082528060200260200182016040528015610c49578160200160208202803683370190505b509450945050505b5097509795505050505050565b60006107cd82610d5f565b7f000000000000000000000000000000000000000000000000000000000000000090565b610c95611672565b610a656001611756565b60007f000000000000000000000000000000000000000000000000000000000000000082604051602001610cd4929190612c3d565b604051602081830303815290604052805190602001209050919050565b60006060610d028651610af5611437565b610b0f89898989898989611910611c2461199b565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6001600160a01b031660009081526006602052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107a15780601f10610776576101008083540402835291602001916107a1565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000610869611c8d565b600080610e163385611138565b9050808310610e3057610e2b3385600061127c565b610e3d565b610e3d338585840361127c565b5060019392505050565b7f000000000000000000000000000000000000000000000000000000000000000090565b60006107b8338484611592565b6000610869611cb1565b60006107cd610e9083611d2b565b6112e4565b7f000000000000000000000000000000000000000000000000000000000000000090565b6008546000906108699060ff611eb9565b610ed2611672565b610eda611b7f565b610ee4600061189d565b7feff3d4d215b42bf0960be9c6d5e05c22cba4df6627a3a523e2acee733b5854c86000604051610ac79190612d4c565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000610869611ec0565b7f000000000000000000000000000000000000000000000000000000000000000090565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610fb98c610d5f565b89604051602001610fcf96959493929190612d97565b6040516020818303038152906040528051906020012090506110008882610ff7878787611ee4565b886101f8611f23565b61100b88888861127c565b5050505050505050565b60608088611024610b45610d3b565b61102f610b6b6109d0565b611037611ba9565b6060611041611432565b905061104b6107e8565b6110f857600060606110608d8d8d868b611f7a565b9150915061107961106f611f93565b83101560cc611584565b61108b6000611086611f93565b611f9a565b61109e8b611097611f93565b8403611f9a565b6110a88184611c24565b808a5167ffffffffffffffff811180156110c157600080fd5b506040519080825280602002602001820160405280156110eb578160200160208202803683370190505b5095509550505050610c51565b6111028882611bb1565b6000606061112a8d8d8d8d8d611116610eb9565b611120578d611123565b60005b898e611910565b9150915061109e8b83611f9a565b6000611142610d3b565b6001600160a01b0316826001600160a01b0316141561116457506000196107bc565b61116e8383611fa4565b90506107bc565b60006107cd82611fcf565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000610869612008565b60006107cd826120a5565b60006111e88361124c565b6111f485858585612109565b95945050505050565b611215828414801561120e57508183145b6067611584565b505050565b6001811b1992909216911b1790565b6000611236848484612212565b506001901b60001901811b1992909216911b1790565b8061125681612258565b5050565b600061126a838311156001611584565b50900390565b80820390821102900390565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906112d7908590612d6f565b60405180910390a3505050565b60006107cd7f000000000000000000000000000000000000000000000000000000000000000083611eb9565b6060825160010167ffffffffffffffff8111801561132d57600080fd5b50604051908082528060200260200182016040528015611357578160200160208202803683370190505b50905060005b81518110156113c65761136e610c69565b81146113a5578361137d610c69565b821061138c576001820361138e565b815b8151811061139857fe5b60200260200101516113a7565b825b8282815181106113b357fe5b602090810291909101015260010161135d565b5092915050565b60006113d761140e565b42118061086957505060075460ff161590565b7f000000000000000000000000000000000000000000000000000000000000000090565b7f000000000000000000000000000000000000000000000000000000000000000090565b606090565b7f000000000000000000000000000000000000000000000000000000000000000090565b60008161148957507f00000000000000000000000000000000000000000000000000000000000000006107d0565b81600114156114b957507f00000000000000000000000000000000000000000000000000000000000000006107d0565b81600214156114e957507f00000000000000000000000000000000000000000000000000000000000000006107d0565b816003141561151957507f00000000000000000000000000000000000000000000000000000000000000006107d0565b816004141561154957507f00000000000000000000000000000000000000000000000000000000000000006107d0565b816005141561157957507f00000000000000000000000000000000000000000000000000000000000000006107d0565b6107d06101356122d1565b8161125657611256816122d1565b6115a96001600160a01b0384161515610198611584565b6115c06001600160a01b0383161515610199611584565b6115cb838383611215565b6001600160a01b0383166000908152602081905260409020546115f190826101a06122fb565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546116209082611744565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906112d7908590612d6f565b60006116a16000357fffffffff0000000000000000000000000000000000000000000000000000000016610c9f565b90506109cd6116b08233612311565b610191611584565b610a656116c36113cd565b610192611584565b6116e06116d66123fa565b82101560cb611584565b6116f56116eb612403565b82111560ca611584565b600854611706908260c0603f611229565b6008556040517fa9ba3ffe0b6c366b81232caab38605a0699ad5398d6cce76f91ee809e322dafc90611739908390612d6f565b60405180910390a150565b60008282016107e18482101583611584565b8015611776576117716117676113ea565b4210610193611584565b61178b565b61178b61178161140e565b42106101a9611584565b600780547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168215151790556040517f9e3a5e37224532dea67b89face185703738a228a6e8a23dee546960180d3be6490611739908390612d4c565b606080600183510367ffffffffffffffff8111801561180557600080fd5b5060405190808252806020026020018201604052801561182f578160200160208202803683370190505b50905060005b81518110156113c65783611847610c69565b82106118565781600101611858565b815b8151811061186257fe5b602002602001015182828151811061187657fe5b6020908102919091010152600101611835565b610a65611894610eb9565b156101b5611584565b6008546118ac908260ff61121a565b6008556040517feff3d4d215b42bf0960be9c6d5e05c22cba4df6627a3a523e2acee733b5854c8906118df908390612d4c565b60405180910390a1806109cd576109cd610a65565b6001901b6000190191901c1690565b6112568183146067611584565b6000606061191f6103e66122d1565b9850989650505050505050565b8151815161193b908290611903565b60005b818110156119955761197684828151811061195557fe5b602002602001015184838151811061196957fe5b602002602001015161240f565b84828151811061198257fe5b602090810291909101015260010161193e565b50505050565b333014611a8a576000306001600160a01b03166000366040516119bf929190612c6d565b6000604051808303816000865af19150503d80600081146119fc576040519150601f19603f3d011682016040523d82523d6000602084013e611a01565b606091505b505090508060008114611a1057fe5b60046000803e6000517fffffffff00000000000000000000000000000000000000000000000000000000167f43adbafb000000000000000000000000000000000000000000000000000000008114611a6c573d6000803e3d6000fd5b506020600460003e604060205260243d03602460403e601c3d016000f35b611a92611ba9565b6060611a9c611432565b9050611aa88782611bb1565b60006060611ac08c8c8c8c8c8c898d8d63ffffffff16565b91509150611ad281848663ffffffff16565b80517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082018390526343adbafb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08301526020027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc82016044820181fd5b60008082511180156107cd575060ff801682806020019051810190611b759190612be7565b60ff161492915050565b610a65611b8a610eb9565b6101b6611584565b60006060611ba16103e66122d1565b935093915050565b610a656116b8565b81518151611bc0908290611903565b60005b8181101561199557611bfb848281518110611bda57fe5b6020026020010151848381518110611bee57fe5b6020026020010151612462565b848281518110611c0757fe5b6020908102919091010152600101611bc3565b6112568282612495565b81518151611c33908290611903565b60005b8181101561199557611c6e848281518110611c4d57fe5b6020026020010151848381518110611c6157fe5b6020026020010151612561565b848281518110611c7a57fe5b6020908102919091010152600101611c36565b7f000000000000000000000000000000000000000000000000000000000000000090565b6000611cbb610d3b565b6001600160a01b031663aaabadc56040518163ffffffff1660e01b815260040160206040518083038186803b158015611cf357600080fd5b505afa158015611d07573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108699190612bb3565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415611d6f575060006107d0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415611db1575060016107d0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415611df3575060026107d0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415611e35575060036107d0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415611e77575060046107d0565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b03161415611579575060056107d0565b1c60011690565b7f000000000000000000000000000000000000000000000000000000000000000090565b60408051604180825260808201909252606091829190602082018180368337019050509050836020820152826040820152846060820153949350505050565b6000611f2e856125ae565b9050611f44611f3e8783876125ca565b83611584565b611f53428410156101b8611584565b5050506001600160a01b039092166000908152600660205260409020805460010190555050565b60006060611f896103e66122d1565b9550959350505050565b620f424090565b6112568282612697565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6000611fe6611fdc610c69565b8314156064611584565b611fee610c69565b821061200457611fff82600161125a565b6107cd565b5090565b60007f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000007f000000000000000000000000000000000000000000000000000000000000000061207561272a565b3060405160200161208a959493929190612e51565b60405160208183030381529060405280519060200120905090565b60006120af610c69565b82106120c5576120c0826001611744565b6120c7565b815b90506107d07f00000000000000000000000000000000000000000000000000000000000000008210801561210257506120fe610c69565b8214155b6064611584565b600080856001600160a01b03166309b2760f866040518263ffffffff1660e01b81526004016121389190612e9b565b602060405180830381600087803b15801561215257600080fd5b505af1158015612166573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061218a9190612a4b565b6040517f66a9c7d20000000000000000000000000000000000000000000000000000000081529091506001600160a01b038716906366a9c7d2906121d690849088908890600401612dcb565b600060405180830381600087803b1580156121f057600080fd5b505af1158015612204573d6000803e3d6000fd5b509298975050505050505050565b61222161010083106064611584565b61224960018210158015612102575061223f60ff8461010003611270565b8211156064611584565b61121583821c156101b4611584565b600281511015612267576109cd565b60008160008151811061227657fe5b602002602001015190506000600190505b825181101561121557600083828151811061229e57fe5b602002602001015190506122c7816001600160a01b0316846001600160a01b0316106065611584565b9150600101612287565b6109cd817f42414c000000000000000000000000000000000000000000000000000000000061272e565b600061230a8484111583611584565b5050900390565b600073ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1ba1b612330610d17565b6001600160a01b03161415801561234b575061234b836127a9565b1561237357612358610d17565b6001600160a01b0316336001600160a01b03161490506107bc565b61237b611cb1565b6001600160a01b0316639be2a8848484306040518463ffffffff1660e01b81526004016123aa93929190612d78565b60206040518083038186803b1580156123c257600080fd5b505afa1580156123d6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116e9190612a2b565b64e8d4a5100090565b67016345785d8a000090565b600061241e8215156004611584565b670de0b6b3a764000083026124508415806124495750670de0b6b3a764000085838161244657fe5b04145b6005611584565b82818161245957fe5b04949350505050565b600082820261248684158061247f57508385838161247c57fe5b04145b6003611584565b670de0b6b3a764000081612459565b6124ac6001600160a01b038316151561019b611584565b6124b882600083611215565b6001600160a01b0382166000908152602081905260409020546124de90826101b26122fb565b6001600160a01b03831660009081526020819052604090205561251161250c826125066107e8565b906127e5565b6127f3565b60006001600160a01b0316826001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516125559190612d6f565b60405180910390a35050565b60006125708215156004611584565b670de0b6b3a764000083026125988415806124495750670de0b6b3a764000085838161244657fe5b6001836001830304018115150291505092915050565b60006125b8612008565b82604051602001610cd4929190612c7d565b60006125dc82516041146101b9611584565b60208281015160408085015160608601518251600080825295019283905292939092811a91600190612615908990859088908890612e7d565b6020604051602081039080840390855afa158015612637573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe001519150506001600160a01b0381161580159061268b5750876001600160a01b0316816001600160a01b0316145b98975050505050505050565b6126a360008383611215565b6126b861250c826126b26107e8565b90611744565b6001600160a01b0382166000908152602081905260409020546126db9082611744565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90612555908590612d6f565b4690565b7f08c379a000000000000000000000000000000000000000000000000000000000600090815260206004526007602452600a808404818106603090810160081b958390069590950190829004918206850160101b01602363ffffff0060e086901c160160181b0190930160c81b60445260e882901c90606490fd5b60006127d47f38e9922e00000000000000000000000000000000000000000000000000000000610c9f565b8214806107cd57506107cd826127f8565b60006107e1838360016122fb565b600255565b50600090565b600082601f83011261280e578081fd5b813567ffffffffffffffff811115612824578182fd5b6020808202612834828201612f47565b8381529350818401858301828701840188101561285057600080fd5b600092505b84831015612873578035825260019290920191908301908301612855565b505050505092915050565b60006020828403121561288f578081fd5b81356107e181612f7a565b600080604083850312156128ac578081fd5b82356128b781612f7a565b915060208301356128c781612f7a565b809150509250929050565b6000806000606084860312156128e6578081fd5b83356128f181612f7a565b9250602084013561290181612f7a565b929592945050506040919091013590565b600080600080600080600060e0888a03121561292c578283fd5b873561293781612f7a565b9650602088013561294781612f7a565b95506040880135945060608801359350608088013561296581612f8f565b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215612994578182fd5b823561299f81612f7a565b946020939093013593505050565b6000602082840312156129be578081fd5b813567ffffffffffffffff8111156129d4578182fd5b6129e0848285016127fe565b949350505050565b600080604083850312156129fa578182fd5b823567ffffffffffffffff811115612a10578283fd5b612a1c858286016127fe565b95602094909401359450505050565b600060208284031215612a3c578081fd5b815180151581146107e1578182fd5b600060208284031215612a5c578081fd5b5051919050565b600080600080600080600060e0888a031215612a7d578283fd5b87359650602080890135612a9081612f7a565b96506040890135612aa081612f7a565b9550606089013567ffffffffffffffff80821115612abc578586fd5b612ac88c838d016127fe565b965060808b0135955060a08b0135945060c08b0135915080821115612aeb578384fd5b818b0191508b601f830112612afe578384fd5b813581811115612b0c578485fd5b612b3c847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612f47565b91508082528c84828501011115612b51578485fd5b8084840185840137848482840101525080935050505092959891949750929550565b600060208284031215612b84578081fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146107e1578182fd5b600060208284031215612bc4578081fd5b81516107e181612f7a565b600060208284031215612be0578081fd5b5035919050565b600060208284031215612bf8578081fd5b81516107e181612f8f565b6000815180845260208085019450808401835b83811015612c3257815187529582019590820190600101612c16565b509495945050505050565b9182527fffffffff0000000000000000000000000000000000000000000000000000000016602082015260240190565b6000828483379101908152919050565b7f190100000000000000000000000000000000000000000000000000000000000081526002810192909252602282015260420190565b6001600160a01b0391909116815260200190565b6020808252825182820181905260009190848201906040850190845b81811015612d085783516001600160a01b031683529284019291840191600101612ce3565b50909695505050505050565b6000602082526107e16020830184612c03565b600060408252612d3a6040830185612c03565b82810360208401526111f48185612c03565b901515815260200190565b92151583526020830191909152604082015260600190565b90815260200190565b9283526001600160a01b03918216602084015216604082015260600190565b9586526001600160a01b0394851660208701529290931660408501526060840152608083019190915260a082015260c00190565b60006060820185835260206060818501528186518084526080860191508288019350845b81811015612e1357612e018551612f6e565b83529383019391830191600101612def565b505084810360408601528551808252908201925081860190845b8181101561220457612e3f8351612f6e565b85529383019391830191600101612e2d565b9485526020850193909352604084019190915260608301526001600160a01b0316608082015260a00190565b93845260ff9290921660208401526040830152606082015260800190565b6020810160038310612ea957fe5b91905290565b6000602080835283518082850152825b81811015612edb57858101830151858201604001528201612ebf565b81811115612eec5783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b6000838252604060208301526129e06040830184612c03565b60ff91909116815260200190565b60405181810167ffffffffffffffff81118282101715612f6657600080fd5b604052919050565b6001600160a01b031690565b6001600160a01b03811681146109cd57600080fd5b60ff811681146109cd57600080fdfea264697066735822122041c8e1c2486ccc90c8d3d886830354c5d4d4ddf0392c2b7ead1d5fbdce71050d64736f6c63430007010033";

type MockComposableStablePoolStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockComposableStablePoolStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockComposableStablePoolStorage__factory extends ContractFactory {
  constructor(...args: MockComposableStablePoolStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    vault: PromiseOrValue<string>,
    tokens: PromiseOrValue<string>[],
    tokenRateProviders: PromiseOrValue<string>[],
    exemptFromYieldProtocolFeeFlags: PromiseOrValue<boolean>[],
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): Promise<MockComposableStablePoolStorage> {
    return super.deploy(
      vault,
      tokens,
      tokenRateProviders,
      exemptFromYieldProtocolFeeFlags,
      overrides || {}
    ) as Promise<MockComposableStablePoolStorage>;
  }
  override getDeployTransaction(
    vault: PromiseOrValue<string>,
    tokens: PromiseOrValue<string>[],
    tokenRateProviders: PromiseOrValue<string>[],
    exemptFromYieldProtocolFeeFlags: PromiseOrValue<boolean>[],
    overrides?: Overrides & {from?: PromiseOrValue<string>}
  ): TransactionRequest {
    return super.getDeployTransaction(
      vault,
      tokens,
      tokenRateProviders,
      exemptFromYieldProtocolFeeFlags,
      overrides || {}
    );
  }
  override attach(address: string): MockComposableStablePoolStorage {
    return super.attach(address) as MockComposableStablePoolStorage;
  }
  override connect(signer: Signer): MockComposableStablePoolStorage__factory {
    return super.connect(signer) as MockComposableStablePoolStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockComposableStablePoolStorageInterface {
    return new utils.Interface(
      _abi
    ) as MockComposableStablePoolStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockComposableStablePoolStorage {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as MockComposableStablePoolStorage;
  }
}
